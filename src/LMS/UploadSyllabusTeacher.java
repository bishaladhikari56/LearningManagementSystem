/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LMS;

/**
 *
 * @author Bishal
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.Image;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Michelle
 */
public class UploadSyllabusTeacher extends javax.swing.JFrame {

    /**
     * Creates new form UploadSyllabusTeacher
     */
    String fileIMG = null;
    byte[] img = null;
    String fileTXT = null;
    byte[] txt = null;
    
    public UploadSyllabusTeacher() {
        initComponents();
        show_upload();
    }
    
    public ArrayList<Upload> UploadList() {
        ArrayList<Upload> uploadList = new ArrayList<>();
        try {
            Class.forName("java.sql.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/learningmanagementsystem", "root", "toor");
            String qrry = "select * from syllabus";
            Statement stmnt = conn.createStatement();
            ResultSet rs = stmnt.executeQuery(qrry);
            /*stmnt.executeUpdate(qrry);
            stmnt.close();
            conn.close();
             */
            Upload upload;
            while (rs.next()) {
                upload = new Upload(rs.getInt("id"), rs.getString("courseID"), rs.getString("teacherID"), rs.getString("assignmentName"), rs.getBytes("Image"), rs.getBytes("TxtFile"));
                uploadList.add(upload);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return uploadList;
    }

    public void show_upload() {
        ArrayList<Upload> list = UploadList();
        DefaultTableModel model = (DefaultTableModel) jTable_Display_Upload.getModel();
        Object[] row = new Object[4];
        for (int i = 0; i < list.size(); i++) {
            /*
            row[2] = list.get(i).getAssignmentName(); 
            row[0] = list.get(i).getCourseID();
            row[1] = list.get(i).getCourseName();
             */
            row[0] = list.get(i).getID();
            row[1] = list.get(i).getCourseID();
            row[2] = list.get(i).getTeacherID();
            row[3] = list.get(i).getAssignmentName();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Display_Upload = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUploadName = new javax.swing.JTextField();
        txtTeacherID = new javax.swing.JTextField();
        txtCourseID = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnIMG = new javax.swing.JButton();
        btnTXT = new javax.swing.JButton();
        image = new javax.swing.JLabel();
        showTxt = new javax.swing.JTextField();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable_Display_Upload.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Course ID", "Teacher ID", "Upload Name"
            }
        ));
        jTable_Display_Upload.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_UploadMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Display_Upload);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Syllabus");

        jLabel2.setText("Course ID:");

        jLabel3.setText("Teacher ID:");

        jLabel4.setText("Upload Name:");

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnIMG.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnIMG.setText("Choose IMG");
        btnIMG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIMGActionPerformed(evt);
            }
        });

        btnTXT.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTXT.setText("Choose TXT");
        btnTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTXTActionPerformed(evt);
            }
        });

        btnClose.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectImages/Close all jframe.png"))); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnSave)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnUpdate)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnDelete)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnClear))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(381, 381, 381))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtUploadName, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(23, 23, 23))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(18, 18, 18)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtCourseID)
                                        .addComponent(txtTeacherID, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnIMG)
                                .addGap(18, 18, 18)
                                .addComponent(btnTXT))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(showTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                                .addGap(12, 12, 12))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnClose)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIMG)
                    .addComponent(btnTXT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addComponent(showTxt)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTeacherID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtUploadName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete)
                            .addComponent(btnClear))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void btnIMGActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        fileIMG = f.getAbsolutePath();
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(fileIMG).getImage().getScaledInstance(image.getWidth(), image.getHeight(), Image.SCALE_SMOOTH));
        image.setIcon(imageIcon);
        try {
            File fIMG = new File(fileIMG);
            FileInputStream fis = new FileInputStream(fIMG);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for (int readNum; (readNum = fis.read(buf)) != -1;) {
                bos.write(buf, 0, readNum);
            }
            img = bos.toByteArray();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }                                      

    private void btnTXTActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        fileTXT = f.getAbsolutePath();
        //String s = new String(fileTXT);
        //showTxt.setText(s);
        showTxt.setText(fileTXT);
        try {
            FileReader reader = new FileReader(fileTXT);
            BufferedReader br = new BufferedReader(reader);
            showTxt.read(br, null);
            File fTXT = new File(fileTXT);
            FileInputStream fis = new FileInputStream(fTXT);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for (int readNum; (readNum = fis.read(buf)) != -1;) {
                bos.write(buf, 0, readNum);
            }
            txt = bos.toByteArray();
            br.close();
            showTxt.requestFocus();
            //txt = bFile; 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }                                      

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        txtCourseID.setText("");
        txtTeacherID.setText("");
        txtUploadName.setText("");
        image.setIcon(null);
        showTxt.setText("");
    }                                        

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        try {
            Class.forName("java.sql.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/learningmanagementsystem", "root", "toor");
            int row = jTable_Display_Upload.getSelectedRow();
            String value = (jTable_Display_Upload.getModel().getValueAt(row, 0).toString());
            String qrry = "delete from uploadsyllabus where id=" + value;
            PreparedStatement pst = conn.prepareStatement(qrry);
            //pst.setString(1, txtAssign.getText());
            pst.executeUpdate();
            //pst.execute();
            DefaultTableModel model = (DefaultTableModel) jTable_Display_Upload.getModel();
            model.setRowCount(0);
            show_upload();
            JOptionPane.showMessageDialog(null, "Deleted");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }                                         

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        try {
            Class.forName("java.sql.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/learningmanagementsystem", "root", "toor");
            String qrry = "insert into upload(assignmentName, courseID, teacherID, Image, TxtFile)VALUES(?,?,?,?,?)";
            PreparedStatement pst = conn.prepareStatement(qrry);
            pst.setString(1, txtUploadName.getText());
            pst.setString(2, txtCourseID.getText());
            pst.setString(3, txtTeacherID.getText());
            pst.setBytes(4, img);
            pst.setBytes(5, txt);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel) jTable_Display_Upload.getModel();
            model.setRowCount(0);
            show_upload();
            JOptionPane.showMessageDialog(null, "Success");

            /*
            Statement stmnt = conn.createStatement();        
            ResultSet rs = stmnt.executeQuery(qrry);
            stmnt.executeUpdate(qrry);
            stmnt.close();
            conn.close();
             */
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }                                       

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        try {
            Class.forName("java.sql.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/learningmanagementsystem", "root", "toor");
            int row = jTable_Display_Upload.getSelectedRow();
            String value = (jTable_Display_Upload.getModel().getValueAt(row, 0).toString());
            String qrry = "update uploadsyllabus set assignmentName=?, courseID=?, teacherID=?, Image=?, TxtFile=? where id="+value;
            PreparedStatement pst = conn.prepareStatement(qrry);
            pst.setString(1, txtUploadName.getText());
            pst.setString(2, txtCourseID.getText());
            pst.setString(3, txtTeacherID.getText());
            pst.setBytes(4, img);
            pst.setBytes(5, txt);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel) jTable_Display_Upload.getModel();
            model.setRowCount(0);
            show_upload();
            JOptionPane.showMessageDialog(null, "Updated");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }                                         

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        setVisible(false);
    }                                        

    private void jTable_Display_UploadMouseClicked(java.awt.event.MouseEvent evt) {                                                   
        // TODO add your handling code here:
        int i = jTable_Display_Upload.getSelectedRow();
        TableModel model = jTable_Display_Upload.getModel();
        txtCourseID.setText(model.getValueAt(i, 1).toString());
        txtTeacherID.setText(model.getValueAt(i, 2).toString());
        txtUploadName.setText(model.getValueAt(i, 3).toString());

        byte[] Pic = (UploadList().get(i).getPic());
        
        if(Pic != null){
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(Pic).getImage().getScaledInstance(image.getWidth(), image.getHeight(), Image.SCALE_SMOOTH));
            image.setIcon(imageIcon);
        }
        else{
            image.setIcon(null);
        }
        
        byte[] Txt = (UploadList().get(i).getTxt());
        if(Txt != null){
            String s = new String(Txt);
            showTxt.setText(s);
        }
        else{
            showTxt.setText("");
        }
    }                                                  

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UploadSyllabusTeacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UploadSyllabusTeacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UploadSyllabusTeacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UploadSyllabusTeacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UploadSyllabusTeacher().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnIMG;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTXT;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Display_Upload;
    private javax.swing.JTextField showTxt;
    private javax.swing.JTextField txtCourseID;
    private javax.swing.JTextField txtTeacherID;
    private javax.swing.JTextField txtUploadName;
    // End of variables declaration                   

}
